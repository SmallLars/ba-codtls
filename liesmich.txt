Vorbereitung (getestet unter Ubuntu 12.04.2 LTS 32/64 bit):

    Benötigte Pakete:
        Nur für 64 bit System: ia32-libs
        Für client:            uuid-dev, libssl-dev
        Für blaster:           uuid-dev, libqrencode-dev
        Für ftditools:         libftdi-dev

    Kompiler:
        arm-2008q3-66-arm-none-eabi-i686-pc-linux-gnu.tar.bz2 entpacken
        Pfad in .bashrc anpassen: export PATH=$PATH:/?...?/arm-2008q3/bin

    Maken der Hilfsmittel:
        blaster:                    make
        libmc1322x/tests:           make TARGET=redbee-econotag
        libmc1322x/tools:           gcc mc1322x-load.c -o mc1322x-load
        libmc1322x/tools/ftditools: make
        contiki/tools:              make tunslip6

client kompilieren:
    client/libcoap-4.0.1: ./configure
    client                make

border-router und econotag:
    Der border-router ist mit der MAC 62:B1:60:B1:60:B1:00:22 konfiguriert.
    Der server ist mit der MAC 62:B1:60:B1:60:B1:00:19 konfiguriert.

    Kompilieren:   make
    Bereinigen:    make clean
    Flashen:       make upload
    Flash löschen: make clear

    Nur bei server: "make listen" zur Ausgabe von /dev/ttyUSB1 auf der Konsole.
    Nur bei border-router: "make border" zur Aktivierung von Tunslip über /dev/ttyUSB3

    make clear löscht in beiden Fällen das Gerät an Index 0
    make upload verwendet in beiden Fällen /dev/ttyUSB1



--- TODO vielleicht. Ist noch zu testen ob sinnvoll ->
usermod -aG dialout lars
groups lars

Ausgebaut weil nun C-Flasher verwendet wird:
Für das Flashen:       libdevice-serialport-perl, libterm-readkey-perl
